{"version":3,"sources":["components/MainImage/MainImage.elements.js","redux/actions/actionTypes.js","redux/reducers/mainImageReducer.js","redux/reducers/approvedImagesReducer.js","redux/reducers/rejectedImagesReducer.js","redux/store/store.js","redux/actions/actions.js","components/MainImage/MainImage.js","globalStyles.js","components/CardFooter/CardFooter.elements.js","components/CardFooter/CardFooter.js","components/Card/Card.elements.js","components/ApprovedImages/ApprovedImages.elements.js","components/ApprovedImages/ApprovedImages.js","components/Card/Card.js","App.js","reportWebVitals.js","index.js"],"names":["MainImageContainer","styled","div","background","MAIN_IMAGE_FETCH_LOADING","MAIN_IMAGE_FETCH_SUCCESS","MAIN_IMAGE_FETCH_FAILED","MAIN_IMAGE_REMOVE","APPROVED_IMAGES_ADD_IMAGE","APPROVED_IMAGES_REMOVE_IMAGE","REJECTED_IMAGES_ADD_IMAGE","mainImageReducer","state","action","type","loading","image","payload","error","approvedImagesReducer","find","id","newState","sessionStorage","setItem","JSON","stringify","imageIdx","findIndex","slice","rejectedImagesReducer","middlewares","thunk","reducer","combineReducers","mainImage","approvedImages","rejectedImages","initialState","getItem","parse","store","createStore","applyMiddleware","fetchImage","dispatch","a","axios","get","data","urls","thumb","full","alt_description","imagePayload","url","smallSize","fullSize","description","response","isInRejectedImages","newImgId","undefined","getState","imgId","MainImage","useDispatch","useSelector","color","height","width","href","target","rel","src","alt","onClick","icon","faPlus","size","GlobalStyle","createGlobalStyle","Button","button","backgroundColor","HorizontalLine","hr","CardFooterContainer","CardFooterText","p","ErrorText","ButtonsContainer","CardFooter","imageId","faTimes","addToApprovedImages","faCheck","CardContainer","CardTitle","CarouselContainer","Carousel","ApprovedImageTitle","ImageContainer","CloseIcon","span","responsive","desktop","breakpoint","max","min","items","tablet","mobile","ApprovedImages","length","containerClass","map","Card","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.ce280ab7.chunk.js","sourcesContent":["import styled from \"styled-components\";\n\nexport const MainImageContainer = styled.div`\n    position: relative;\n    margin: auto;\n    width: 300px;\n    height: 380px;\n    border-radius: 5px;\n    background: ${({background}) => background? background: null }};\n    background-repeat: no-repeat;\n    background-size: cover;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    cursor: pointer;\n    overflow: hidden;\n`;","export const MAIN_IMAGE_FETCH_LOADING = \"MAIN_IMAGE_FETCH_LOADING\";\nexport const MAIN_IMAGE_FETCH_SUCCESS = \"MAIN_IMAGE_FETCH_SUCCESS\";\nexport const MAIN_IMAGE_FETCH_FAILED = \"MAIN_IMAGE_FETCH_FAILED\";\nexport const MAIN_IMAGE_REMOVE = \"MAIN_IMAGE_REMOVE\";\n\nexport const APPROVED_IMAGES_ADD_IMAGE = \"APPROVED_IMAGES_ADD_IMAGE\";\nexport const APPROVED_IMAGES_REMOVE_IMAGE = \"APPROVED_IMAGES_REMOVE_IMAGE\";\n\nexport const REJECTED_IMAGES_ADD_IMAGE = \"REJECTED_IMAGES_ADD_IMAGE\";","import { \n    MAIN_IMAGE_FETCH_LOADING, \n    MAIN_IMAGE_FETCH_SUCCESS, \n    MAIN_IMAGE_FETCH_FAILED,\n    MAIN_IMAGE_REMOVE\n} from '../actions/actionTypes';\n\nconst mainImageReducer = (state = {}, action) => {\n    switch (action.type) {\n        case MAIN_IMAGE_FETCH_LOADING:\n            return {\n                ...state,\n                loading: true\n            }\n        case MAIN_IMAGE_FETCH_SUCCESS:\n            return {\n                loading: false,\n                image: action.payload,\n                error: null\n            }\n        case MAIN_IMAGE_FETCH_FAILED:\n            return {\n                image: {},\n                loading: false,\n                error: action.payload\n            }\n        case MAIN_IMAGE_REMOVE:\n            return {\n                image: {},\n                loading: false,\n                error: null\n            }\n        default:\n            return state;\n    }\n}\n\nexport default mainImageReducer;","import {APPROVED_IMAGES_ADD_IMAGE, APPROVED_IMAGES_REMOVE_IMAGE} from '../actions/actionTypes';\n\nconst approvedImagesReducer = (state = [], action) => {\n    switch (action.type) {\n        case APPROVED_IMAGES_ADD_IMAGE:\n            // Check if Image already exists in the list\n            const image = state.find (({id}) => id === action.payload.id);\n            \n            if (!image) {\n                const newState = [...state, action.payload];\n                sessionStorage.setItem('approvedImages', JSON.stringify(newState));\n                return newState;\n            }\n            return state;\n\n        case APPROVED_IMAGES_REMOVE_IMAGE:\n            let imageIdx = state.findIndex ((image) => image.id === action.payload.id);\n            const newState = [...state.slice (0, imageIdx), ...state.slice (imageIdx + 1)];\n            sessionStorage.setItem('approvedImages', JSON.stringify(newState));\n            return newState;\n        default:\n            return state;\n    }\n};\n\nexport default approvedImagesReducer;","import {REJECTED_IMAGES_ADD_IMAGE} from '../actions/actionTypes';\n\nconst rejectedImagesReducer = (state = [], action) => {\n    switch (action.type) {\n        case REJECTED_IMAGES_ADD_IMAGE:\n            const newState = [...state, action.payload];\n            sessionStorage.setItem('rejectedImages', JSON.stringify(newState));\n            return newState;\n        default:\n            return state;\n    }\n}\n\nexport default rejectedImagesReducer;","import { combineReducers, createStore, applyMiddleware  } from 'redux';\nimport thunk from 'redux-thunk';\nimport mainImageReducer from '../reducers/mainImageReducer';\nimport approvedImagesReducer from '../reducers/approvedImagesReducer';\nimport rejectedImagesReducer from '../reducers/rejectedImagesReducer';\n\nconst middlewares = [thunk];\n\nconst reducer = combineReducers({\n    mainImage: mainImageReducer,\n    approvedImages: approvedImagesReducer,\n    rejectedImages: rejectedImagesReducer\n});\n\n/*\n    Assigning Initial State depending on the data in Session Storage\n*/\nconst initialState = {\n    mainImage: { \n        loading: false,\n        image: sessionStorage.getItem('mainImage')? JSON.parse(sessionStorage.getItem('mainImage')): {},\n        error: null\n    },\n    approvedImages: sessionStorage.getItem('approvedImages')? JSON.parse(sessionStorage.getItem('approvedImages')): [],\n    rejectedImages: sessionStorage.getItem('rejectedImages')? JSON.parse(sessionStorage.getItem('rejectedImages')): [],\n};\n\nconst store = createStore(\n    reducer,\n    initialState,\n    applyMiddleware(...middlewares)\n);\n\nexport default store;","import axios from \"axios\";\nimport {\n    MAIN_IMAGE_FETCH_LOADING, \n    MAIN_IMAGE_FETCH_SUCCESS, \n    MAIN_IMAGE_FETCH_FAILED,\n    MAIN_IMAGE_REMOVE,\n    APPROVED_IMAGES_ADD_IMAGE,\n    REJECTED_IMAGES_ADD_IMAGE\n} from './actionTypes';\nimport store from \"../store/store\";\n\nexport const fetchImage = () => {\n    return async (dispatch) => {\n        try {\n            dispatch ({\n                type: MAIN_IMAGE_FETCH_LOADING\n            });\n            const { data : { id, urls: {thumb, full}, alt_description} } = await axios.get(`https://api.unsplash.com/photos/random/?client_id=G1leH2R7_Ep6W99UUwh2I_Mn46hM2AT8Vw0Lf2dwI4E`);\n            const imagePayload = {\n                id,\n                url: {\n                    smallSize: thumb,\n                    fullSize: full\n                },\n                description: alt_description\n            };\n            sessionStorage.setItem('mainImage', JSON.stringify(imagePayload));\n            dispatch ({\n                type: MAIN_IMAGE_FETCH_SUCCESS,\n                payload: imagePayload\n            });\n        } catch (error) {\n            dispatch ({\n                type: MAIN_IMAGE_FETCH_FAILED,\n                payload: error.response.data\n            })\n        }\n    }\n}\n\nexport const addToApprovedImages = (image) => {\n    return (dispatch) => {\n        dispatch ({\n            type: APPROVED_IMAGES_ADD_IMAGE,\n            payload: image\n        });\n\n        sessionStorage.setItem('mainImage', JSON.stringify({}));\n        dispatch ({\n            type: MAIN_IMAGE_REMOVE\n        });\n    }\n}\n\nexport const addToRejectedImages = (imageId) => {\n    return (dispatch) => {\n        dispatch ({\n            type: REJECTED_IMAGES_ADD_IMAGE,\n            payload: imageId\n        });\n        dispatch ({\n            type: MAIN_IMAGE_REMOVE\n        });\n        dispatch (fetchImage());\n\n        // Fetch until Image is not in Rejected List\n        while (isInRejectedImages(store.getState().mainImage.id)) {\n            dispatch (fetchImage());\n        }\n    }\n}\n\n// Checks if given imageId is in Rejected Images List\nconst isInRejectedImages = (newImgId) => {\n    const { rejectedImages } = store.getState();\n    return rejectedImages.find (imgId => imgId === newImgId) !== undefined;\n}","import React from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { MainImageContainer } from './MainImage.elements';\nimport {fetchImage} from '../../redux/actions/actions';\nimport {FontAwesomeIcon} from '@fortawesome/react-fontawesome';\nimport {faPlus} from '@fortawesome/free-solid-svg-icons';\nimport ReactLoading from 'react-loading';\n\nconst MainImage = () => {\n    const dispatch = useDispatch();\n    const { image: \n        {\n            id,\n            url,\n            description\n        },\n        loading\n    } = useSelector(state => state.mainImage);\n    return (\n        <MainImageContainer background={id? null: \"#cfcfcf\"}>\n        {\n            loading?\n                <ReactLoading data-testid=\"loader-div\" type={'spin'} color={'gray'} height={75} width={75} />\n            :\n            (\n                !id?\n                <FontAwesomeIcon data-testid=\"plus-icon\" onClick={ () => dispatch(fetchImage())} icon={faPlus} color={\"gray\"} size={\"5x\"} />\n                :\n                <a href={url.fullSize} target=\"_blank\" rel=\"noreferrer\">\n                    <img data-testid=\"main-img\" src={url.smallSize} alt={description} width=\"300\" height=\"380\" />\n                </a>\n            )\n        }\n        </MainImageContainer>\n    )\n}\n\nexport default MainImage;\n","import styled, {createGlobalStyle} from \"styled-components\";\n\nconst GlobalStyle = createGlobalStyle`\n    * {\n        box-sizing: border-box;\n        margin: 0;\n        padding: 0;\n        font-family: 'Source Sans Pro', sans-serif;\n    }\n\n    body {\n        background-color: #3953e1;\n    }\n`;\n\nexport const Button = styled.button`\n    border-radius: 25px;\n    padding: 15px 50px;\n    margin: 0 5px;\n    background: ${({backgroundColor}) => backgroundColor};\n    color: white;\n    border: none;\n    cursor: pointer;\n    transition: transform .2s;\n\n    &:hover {\n        transform: scale(1.1);\n    }\n`;\n\nexport const HorizontalLine = styled.hr`\n    width: 90%;\n    opacity: 0.5;\n    text-align: center;\n    margin: 10px auto;\n`;\n\nexport default GlobalStyle;","import styled from \"styled-components\";\n\nexport const CardFooterContainer = styled.div`\n    height: 150px;\n`;\n\nexport const CardFooterText = styled.p`\n    opacity: 0.6;\n    font-size: 12px;\n    font-weight: bold;\n    text-align: center;\n    margin: 10px 0;\n`;\n\nexport const ErrorText = styled.p`\n    color: red;\n    opacity: 0.8;\n    font-size: 14px;\n    font-weight: bold;\n    text-align: center;\n    margin: 10px 0;\n`;\n\nexport const ButtonsContainer = styled.div`\n    margin: 10px 0;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n`;","import React from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport {addToRejectedImages, addToApprovedImages} from '../../redux/actions/actions';\nimport {Button} from '../../globalStyles';\nimport {CardFooterContainer, CardFooterText, ButtonsContainer, ErrorText } from './CardFooter.elements';\nimport {FontAwesomeIcon} from '@fortawesome/react-fontawesome';\nimport {faTimes, faCheck} from '@fortawesome/free-solid-svg-icons';\n\nconst CardFooter = () => {\n    const dispatch = useDispatch();\n    const { image, error } = useSelector(state => state.mainImage);\n    return (\n        <CardFooterContainer>\n            {\n                error?\n                <ErrorText data-testid=\"error-text\">{error}</ErrorText>\n                :\n                (\n                    !image.id?\n                    <CardFooterText>\n                        Click on the + in order to get image recommendations\n                    </CardFooterText>\n                    :\n                    <ButtonsContainer>\n                        <Button onClick={ () => dispatch(addToRejectedImages(image.id))} backgroundColor=\"#454545\">\n                            <FontAwesomeIcon icon={faTimes} color={\"white\"} size={\"lg\"} />\n                        </Button>\n                        <Button onClick= { () => dispatch(addToApprovedImages(image)) } backgroundColor=\"#3b55e6\">\n                            <FontAwesomeIcon icon={faCheck} color={\"white\"} size={\"lg\"} />\n                        </Button>\n                    </ButtonsContainer>\n                )\n            }    \n        </CardFooterContainer>\n    )\n}\n\nexport default CardFooter;\n","import styled from \"styled-components\";\n\nexport const CardContainer = styled.div`\n    margin: auto;\n    margin-top: 50px;\n    width: 370px;\n    height: 630px;\n    background-color: white;\n    border-radius: 5px;\n`;\n\nexport const CardTitle = styled.p`\n    text-align: left;\n    margin-left 20px;\n    color: #3953e1;\n    text-transform: uppercase;\n    font-size: 12px;\n    font-weight: 700;\n    padding: 10px 0px;\n`;","import styled from \"styled-components\";\nimport Carousel from \"react-multi-carousel\";\n\nexport const CarouselContainer = styled(Carousel)`\n    margin-left: 10px;\n`;\n\nexport const ApprovedImageTitle = styled.p`\n    text-align: left;\n    margin-left: 20px;\n    color: #3953e1;\n    text-transform: uppercase;\n    font-size: 12px;\n    font-weight: 700;\n    padding: 10px 0px;\n`;\n\nexport const ImageContainer = styled.div`\n    position: relative;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    border-radius: 5px;\n    margin-left: 10px;\n    width: 75px;\n    height: 50px;\n    overflow: hidden;\n    background: ${({background}) => background};\n`;\n\nexport const CloseIcon = styled.span`\n    position: absolute;\n    content: \"\";\n    top: 0px;\n    right: 2px;\n    cursor: pointer;\n`;","import React from 'react';\nimport \"react-multi-carousel/lib/styles.css\";\nimport { CarouselContainer, ApprovedImageTitle, ImageContainer, CloseIcon } from './ApprovedImages.elements';\nimport { useSelector, useDispatch } from 'react-redux';\nimport {APPROVED_IMAGES_REMOVE_IMAGE} from '../../redux/actions/actionTypes';\nimport {FontAwesomeIcon} from '@fortawesome/react-fontawesome';\nimport {faPlus, faTimes} from '@fortawesome/free-solid-svg-icons';\n\nconst responsive = {\n    desktop: {\n      breakpoint: { max: 3000, min: 1024 },\n      items: 4,\n    },\n    tablet: {\n      breakpoint: { max: 1024, min: 464 },\n      items: 4,\n    },\n    mobile: {\n      breakpoint: { max: 464, min: 0 },\n      items: 3,\n    }\n}\n\nconst ApprovedImages = () => {\n    const approvedImages = useSelector(state => state.approvedImages);\n    const dispatch = useDispatch();\n    return (\n        <>\n            <ApprovedImageTitle>\n                approved images ({approvedImages.length})\n            </ApprovedImageTitle>\n            <CarouselContainer\n                responsive={responsive}\n                containerClass=\"carousel-container\"\n            >\n                {\n                    approvedImages.length > 0?\n                        approvedImages.map (\n                            ({id, url : {smallSize}, description}) => (\n                            <ImageContainer key={id}>\n                                <img src={smallSize} alt={description} width=\"75\" height=\"50\" />\n                                <CloseIcon onClick={() => dispatch({type: APPROVED_IMAGES_REMOVE_IMAGE, payload: {id: id}})}>\n                                    <FontAwesomeIcon icon={faTimes} color={\"white\"} size={\"xs\"} />\n                                </CloseIcon>\n                            </ImageContainer>\n                            )\n                    )\n                    :\n                    <ImageContainer background={\"#cfcfcf\"}>\n                        <FontAwesomeIcon icon={faPlus} color={\"gray\"} size={\"1x\"} />\n                    </ImageContainer>\n                }\n            </CarouselContainer>\n        </>\n    )\n}\n\nexport default ApprovedImages;\n","import React from 'react';\nimport MainImage from '../MainImage/MainImage';\nimport CardFooter from '../CardFooter/CardFooter';\nimport { CardContainer, CardTitle } from './Card.elements';\nimport {HorizontalLine} from '../../globalStyles';\nimport ApprovedImages from '../ApprovedImages/ApprovedImages';\n\nconst Card = () => {\n    return (\n        <CardContainer>\n            <CardTitle>image approval application</CardTitle>\n            <ApprovedImages />\n            <HorizontalLine />\n            <MainImage />\n            <HorizontalLine />\n            <CardFooter />\n        </CardContainer>\n    )\n}\n\nexport default Card;\n","import Card from \"./components/Card/Card\";\nimport GlobalStyle from './globalStyles';\n\nfunction App() {\n  return (\n    <>\n      <GlobalStyle />\n      <Card />\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport { Provider } from 'react-redux';\nimport store from './redux/store/store';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}